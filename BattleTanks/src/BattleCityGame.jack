class BattleCityGame {
    field int delay;
    field int absolute_delay;

    field Tank tank;
    field int tank_tlx;
	field int tank_tly;
	field int tank_brx;
	field int tank_bry;

	field in direction;
	
    field BrickBlock brickBlock;
    field ModuleBlock moduleBlock;
    field LeavesBlock leavesBlock;

    field int clock;
    field int score;
    field int hight_score;

    constructor BattleCityGame new() {
        let tank = Tank.new(0, 0, 30);
		let direction = 0;
        //let tank_tlx = 4;
		//let tank_brx = 5;
		//let tank_tly = tank.collision_box_tly();
		//let tank_bry = tank_tly + 32;

        //let brickBlock = BrickBlock.new();
        //let moduleBlock = ModuleBlock.new();
        //let leavesBlock = LeavesBlock.new();

        //let absolute_delay = 10;
		//let delay = absolute_delay - 4;
		//let crashed = false;

        //let achievement_timeout_cycles = -1;
		//let clock = 0;
		//let score = 0;
		//let high_score = highest_score;

        //do Screen.clearScreen();
		//do Output.moveCursor(0,0);
		//do Output.printString("High Score: ");
		//do Output.moveCursor(0,12);
		//do Output.printInt(high_score);

        //do Output.moveCursor(1,0);
		//do Output.printString("Score: ");
		//do Output.moveCursor(1,7);
		//do Output.printInt(score);
		// ground
		/*do Screen.setColor(true);
		do Screen.drawLine(0, 244, 511, 244);*/
		
		return this;
    }
    method void dispose() {
		do tank.dispose();
		
		//do brickBlock.dispose();
		//do moduleBlock.dispose();
		//do leavesBlock.dispose();
		
		do Memory.deAlloc(this);
		return;
	}
	method void moveTank() {
		if(direction = 1) { do tank.moveUp(); }
		if(direction = 2) { do tank.moveDown(); }
		if(direction = 3) { do tank.moveLeft(); }
		if(direction = 4) { do tank.moveRight(); }

		do Sys.wait(5);
		return;
	}
	method void run() {
		var char key;
		var boolean exit;
		let exit = false;

		while(~exit) {
			while(key = 0) {
				let key = Keyboard.keyPressed();
				do moveTank();
			}

			if(key = 81) { let exit = true; } // q

			if(key = 131) { let direction = 1; } // up
			if(key = 133) { let direction = 2; } // down
			if(key = 130) { let direction = 3; } // left
			if(key = 132) { let direction = 4; } // right

			while(~(key = 0)) {
				let key = Keyboard.keyPressed();
				do moveTank();
			}
		}
		return;
	}
}