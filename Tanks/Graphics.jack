class Graphics {
	function void drawTankFirstGen(int location) {
		var int memAddress; 
		let memAddress = 16384+location;
		// column 0
		do Memory.poke(memAddress, 3840);
		do Memory.poke(memAddress +32, 2304);
		do Memory.poke(memAddress +64, 1536);
		do Memory.poke(memAddress +96, 2319);
		do Memory.poke(memAddress +128, 2313);
		do Memory.poke(memAddress +160, 31215);
		do Memory.poke(memAddress +192, 18729);
		do Memory.poke(memAddress +224, -14017);
		do Memory.poke(memAddress +256, 2313);
		do Memory.poke(memAddress +288, 2319);
		do Memory.poke(memAddress +320, 16329);
		do Memory.poke(memAddress +352, 16431);
		do Memory.poke(memAddress +384, 20265);
		do Memory.poke(memAddress +416, 18735);
		do Memory.poke(memAddress +448, 20265);
		do Memory.poke(memAddress +480, 16431);
		do Memory.poke(memAddress +512, 16329);
		do Memory.poke(memAddress +544, -16321);
		do Memory.poke(memAddress +576, 16425);
		do Memory.poke(memAddress +608, 32751);
		do Memory.poke(memAddress +640, 9);
		do Memory.poke(memAddress +672, 15);
		// column 1
		do Memory.poke(memAddress +97, 15);
		do Memory.poke(memAddress +129, 9);
		do Memory.poke(memAddress +161, 15);
		do Memory.poke(memAddress +193, 9);
		do Memory.poke(memAddress +225, 15);
		do Memory.poke(memAddress +257, 9);
		do Memory.poke(memAddress +289, 15);
		do Memory.poke(memAddress +321, 9);
		do Memory.poke(memAddress +353, 15);
		do Memory.poke(memAddress +385, 9);
		do Memory.poke(memAddress +417, 15);
		do Memory.poke(memAddress +449, 9);
		do Memory.poke(memAddress +481, 15);
		do Memory.poke(memAddress +513, 9);
		do Memory.poke(memAddress +545, 15);
		do Memory.poke(memAddress +577, 9);
		do Memory.poke(memAddress +609, 15);
		do Memory.poke(memAddress +641, 9);
		do Memory.poke(memAddress +673, 15);
		return;
	}
	
	function void drawBullet(int location) {
		var int memAddress; 
		let memAddress = 16384+location;
		// column 0
		do Memory.poke(memAddress, 4);
		do Memory.poke(memAddress +32, 14);
		do Memory.poke(memAddress +64, 31);
		do Memory.poke(memAddress +96, 31);
		do Memory.poke(memAddress +128, 31);
		do Memory.poke(memAddress +160, 31);
		return;
	}
	
	function void drawBrickBlock(int location) {
		var int memAddress; 
		let memAddress = 16384+location;
		// column 0
		do Memory.poke(memAddress, -1);
		do Memory.poke(memAddress +32, 32703);
		do Memory.poke(memAddress +64, 32703);
		do Memory.poke(memAddress +96, 1);
		do Memory.poke(memAddress +128, -1027);
		do Memory.poke(memAddress +160, -1027);
		do Memory.poke(memAddress +192, 1);
		do Memory.poke(memAddress +224, -8209);
		do Memory.poke(memAddress +256, -8209);
		do Memory.poke(memAddress +288, 1);
		do Memory.poke(memAddress +320, -1027);
		do Memory.poke(memAddress +352, -1027);
		do Memory.poke(memAddress +384, 1);
		do Memory.poke(memAddress +416, 32703);
		do Memory.poke(memAddress +448, 32703);
		do Memory.poke(memAddress +480, 1);
		do Memory.poke(memAddress +512, -1027);
		do Memory.poke(memAddress +544, -1027);
		do Memory.poke(memAddress +576, 1);
		do Memory.poke(memAddress +608, -1);
		// column 1
		do Memory.poke(memAddress +1, 15);
		do Memory.poke(memAddress +33, 15);
		do Memory.poke(memAddress +65, 15);
		do Memory.poke(memAddress +97, 8);
		do Memory.poke(memAddress +129, 15);
		do Memory.poke(memAddress +161, 15);
		do Memory.poke(memAddress +193, 8);
		do Memory.poke(memAddress +225, 15);
		do Memory.poke(memAddress +257, 15);
		do Memory.poke(memAddress +289, 8);
		do Memory.poke(memAddress +321, 15);
		do Memory.poke(memAddress +353, 15);
		do Memory.poke(memAddress +385, 8);
		do Memory.poke(memAddress +417, 15);
		do Memory.poke(memAddress +449, 15);
		do Memory.poke(memAddress +481, 8);
		do Memory.poke(memAddress +513, 15);
		do Memory.poke(memAddress +545, 15);
		do Memory.poke(memAddress +577, 8);
		do Memory.poke(memAddress +609, 15);
		return;
	}
	
	function void drawModuleBlock(int location) {
		var int memAddress; 
		let memAddress = 16384+location;
		// column 0
		do Memory.poke(memAddress, -1);
		do Memory.poke(memAddress +32, 1537);
		do Memory.poke(memAddress +64, 1665);
		do Memory.poke(memAddress +96, -6471);
		do Memory.poke(memAddress +128, -6471);
		do Memory.poke(memAddress +160, -6471);
		do Memory.poke(memAddress +192, 1665);
		do Memory.poke(memAddress +224, -2307);
		do Memory.poke(memAddress +256, 1537);
		do Memory.poke(memAddress +288, -1);
		do Memory.poke(memAddress +320, -1);
		do Memory.poke(memAddress +352, 1537);
		do Memory.poke(memAddress +384, 1665);
		do Memory.poke(memAddress +416, -6471);
		do Memory.poke(memAddress +448, -6471);
		do Memory.poke(memAddress +480, -6471);
		do Memory.poke(memAddress +512, 1665);
		do Memory.poke(memAddress +544, -2307);
		do Memory.poke(memAddress +576, 1537);
		do Memory.poke(memAddress +608, -1);
		// column 1
		do Memory.poke(memAddress +1, 15);
		do Memory.poke(memAddress +33, 8);
		do Memory.poke(memAddress +65, 10);
		do Memory.poke(memAddress +97, 10);
		do Memory.poke(memAddress +129, 10);
		do Memory.poke(memAddress +161, 10);
		do Memory.poke(memAddress +193, 10);
		do Memory.poke(memAddress +225, 11);
		do Memory.poke(memAddress +257, 8);
		do Memory.poke(memAddress +289, 15);
		do Memory.poke(memAddress +321, 15);
		do Memory.poke(memAddress +353, 8);
		do Memory.poke(memAddress +385, 10);
		do Memory.poke(memAddress +417, 10);
		do Memory.poke(memAddress +449, 10);
		do Memory.poke(memAddress +481, 10);
		do Memory.poke(memAddress +513, 10);
		do Memory.poke(memAddress +545, 11);
		do Memory.poke(memAddress +577, 8);
		do Memory.poke(memAddress +609, 15);
		return;
	}
	function void drawLeavesBlock(int location) {
		var int memAddress; 
		let memAddress = 16384+location;
		// column 0
		do Memory.poke(memAddress, 6535);
		do Memory.poke(memAddress +32, -6535);
		do Memory.poke(memAddress +64, -22186);
		do Memory.poke(memAddress +96, 22954);
		do Memory.poke(memAddress +128, -20651);
		do Memory.poke(memAddress +160, 22187);
		do Memory.poke(memAddress +192, -22186);
		do Memory.poke(memAddress +224, 22954);
		do Memory.poke(memAddress +256, -6535);
		do Memory.poke(memAddress +288, 6534);
		do Memory.poke(memAddress +320, 6534);
		do Memory.poke(memAddress +352, -6535);
		do Memory.poke(memAddress +384, -22186);
		do Memory.poke(memAddress +416, 22954);
		do Memory.poke(memAddress +448, -20651);
		do Memory.poke(memAddress +480, 22187);
		do Memory.poke(memAddress +512, -22186);
		do Memory.poke(memAddress +544, 22954);
		do Memory.poke(memAddress +576, -6535);
		do Memory.poke(memAddress +608, 6535);
		// column 1
		do Memory.poke(memAddress +1, 14);
		do Memory.poke(memAddress +33, 9);
		do Memory.poke(memAddress +65, 6);
		do Memory.poke(memAddress +97, 5);
		do Memory.poke(memAddress +129, 10);
		do Memory.poke(memAddress +161, 13);
		do Memory.poke(memAddress +193, 6);
		do Memory.poke(memAddress +225, 5);
		do Memory.poke(memAddress +257, 9);
		do Memory.poke(memAddress +289, 6);
		do Memory.poke(memAddress +321, 6);
		do Memory.poke(memAddress +353, 9);
		do Memory.poke(memAddress +385, 6);
		do Memory.poke(memAddress +417, 5);
		do Memory.poke(memAddress +449, 10);
		do Memory.poke(memAddress +481, 13);
		do Memory.poke(memAddress +513, 6);
		do Memory.poke(memAddress +545, 5);
		do Memory.poke(memAddress +577, 9);
		do Memory.poke(memAddress +609, 14);
		return;
	}
}