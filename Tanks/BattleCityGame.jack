class BattleCityGame {
	field Tank tank;
	field Bullet bullet;

	field int direction;
	field int lastDirection;

    field int clock;
    field int score;
    field int hight_score;

    constructor BattleCityGame new() {
        let tank = Tank.new(0, 0);
		let bullet = null;
		let direction = 1;
		let lastDirection = 0;
		return this;
    }
    method void dispose() {
		do tank.dispose();
		do bullet.dispose();
		do Memory.deAlloc(this);
		return;
	}
	method void moveTank() {
		if(direction = 1) { 
			do tank.moveUp();
			let lastDirection = 1; 
			let direction = 0;
		}
		if(direction = 2) { 
			do tank.moveDown();
			let lastDirection = 2; 
			let direction = 0;
		}
		if(direction = 3) { 
			do tank.moveLeft();
			let lastDirection = 3;
			let direction = 0;
		}
		if(direction = 4) { 
			do tank.moveRight();
			let lastDirection = 4; 
			let direction = 0;
		}

		do Sys.wait(5);
		return;
	}
	method void moveBullet() {
		if(lastDirection = 1) { 
			do bullet.shootUp();
		}
		if(lastDirection = 2) { 
			do bullet.shootDown();
		}
		if(lastDirection = 3) { 
			do bullet.shootLeft();
		}
		if(lastDirection = 4) { 
			do bullet.shootRight();
		}

		do Sys.wait(5);
		return;
	}
	method void tankShoot() {
		var Array cod;
		let cod = tank.getTankCoordinates();
		let bullet = Bullet.new(cod[0], cod[1], lastDirection);
		do moveBullet();
		return;
	}
	method void exec() {
		var char key;
		var boolean exit;
		let exit = false;

		while(~exit) {
			while(key = 0) {
				let key = Keyboard.keyPressed();
				do moveTank();
			}

			if(key = 81) { let exit = true; } // q
			if(key = 32) { do tankShoot(); } // space

			if(key = 131) { let direction = 1; } // up
			if(key = 133) { let direction = 2; } // down
			if(key = 130) { let direction = 3; } // left
			if(key = 132) { let direction = 4; } // right

			while(~(key = 0)) {
				let key = Keyboard.keyPressed();
				do moveTank();
			}
			while(~(bullet = null)) {
				do moveBullet();
			}
		}
		return;
	}
}