function CollisionManager.init 0
call List.new 0
pop static 0
push constant 0
return
function CollisionManager.update 3
label WHILE_EXP0
push local 0
push static 0
call List.size 1
lt
not
if-goto WHILE_END0
push local 0
pop local 1
push local 0
call colliders.at 1
pop local 2
push local 2
push local 1
call CollisionManager.__checkCollision 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionManager.__checkCollision 3
push argument 1
pop local 1
call a.reset 0
pop temp 0
label WHILE_EXP0
push local 1
push static 0
call List.size 1
lt
not
if-goto WHILE_END0
push local 1
call colliders.at 1
pop local 0
push argument 0
push local 0
call Collider.intersects 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call a.addCollision 1
pop local 2
push local 0
push local 2
call Collider.linkCollision 2
pop temp 0
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionManager.addCollider 0
push static 0
push argument 0
call List.add 2
pop temp 0
push constant 0
return
