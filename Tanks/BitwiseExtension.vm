function BitwiseExtension.leftShift 1
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 51
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 1
push constant 15
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push argument 0
add
pop argument 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
function BitwiseExtension.rightShift 1
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 50
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 1
push constant 15
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push argument 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push constant 32767
and
pop argument 0
push argument 0
push constant 2
call Math.divide 2
pop argument 0
push argument 0
push constant 16384
or
pop argument 0
goto IF_END2
label IF_FALSE2
push argument 0
push constant 2
call Math.divide 2
pop argument 0
label IF_END2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 0
return
function BitwiseExtension.takeNLowBits 0
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 50
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 1
push constant 15
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
return
label IF_FALSE1
push argument 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push constant 32767
and
pop argument 0
label IF_FALSE2
push argument 0
push constant 2
push argument 1
call MathExtension.pow 2
call MathExtension.remainsDivision 2
return
function BitwiseExtension.reverseBits 2
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push local 0
add
pop local 0
push argument 0
push constant 1
and
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
or
pop local 0
label IF_FALSE0
push argument 0
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push constant 32767
and
pop argument 0
push argument 0
push constant 2
call Math.divide 2
pop argument 0
push argument 0
push constant 16384
or
pop argument 0
goto IF_END1
label IF_FALSE1
push argument 0
push constant 2
call Math.divide 2
pop argument 0
label IF_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
