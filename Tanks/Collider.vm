function Collider.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Collider.box 0
push argument 0
pop pointer 0
push this 0
return
function Collider.intersects 0
push argument 0
pop pointer 0
push this 0
push argument 1
call Collider.box 1
call BoundingBox.intersects 2
return
function Collider.addCollision 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
call CollisionInfo.new 2
pop local 0
push this 2
push local 0
call List.add 2
pop temp 0
push local 0
return
function Collider.linkCollision 0
push argument 0
pop pointer 0
push this 2
push argument 1
call CollisionInfo.link 1
call List.add 2
pop temp 0
push constant 0
return
function Collider.reset 0
push argument 0
pop pointer 0
push this 2
push constant 0
call List.shrink 2
pop temp 0
push constant 0
return
function Collider.hasCollisions 2
push argument 0
pop pointer 0
push this 2
call List.size 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
call List.size 1
lt
not
if-goto WHILE_END0
push local 1
call CollisionInfo.valid 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Collider.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
call List.size 1
lt
not
if-goto WHILE_END0
push local 0
call m_data.at 1
pop local 1
push local 1
call CollisionInfo.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 2
call List.dispose 1
pop temp 0
push this 0
call BoundingBox.dispose 1
pop temp 0
push this 1
call ColliderMetadata.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
